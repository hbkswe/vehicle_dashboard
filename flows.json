[
    {
        "id": "d1e0eec527dd31ed",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d589306dca253788",
        "type": "ui_gauge",
        "z": "d1e0eec527dd31ed",
        "name": "",
        "group": "2f3d5f09892a6508",
        "order": 6,
        "width": 7,
        "height": 7,
        "gtype": "gage",
        "title": "Power (kW)",
        "label": "units",
        "format": "{{value}}",
        "min": "-1000",
        "max": "1000",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1650,
        "y": 300,
        "wires": []
    },
    {
        "id": "03139c1f642321af",
        "type": "ui_gauge",
        "z": "d1e0eec527dd31ed",
        "name": "",
        "group": "2f3d5f09892a6508",
        "order": 7,
        "width": 7,
        "height": 7,
        "gtype": "gage",
        "title": "RPM",
        "label": "units",
        "format": "{{value}}",
        "min": 0,
        "max": "800",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "seg1": "",
        "seg2": "",
        "diff": false,
        "className": "",
        "x": 1630,
        "y": 340,
        "wires": []
    },
    {
        "id": "5877ab6dcdf4e788",
        "type": "ui_slider",
        "z": "d1e0eec527dd31ed",
        "name": "",
        "label": "Motor Speeding",
        "tooltip": "",
        "group": "2f3d5f09892a6508",
        "order": 12,
        "width": 6,
        "height": 1,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "min": 0,
        "max": "4",
        "step": 1,
        "className": "",
        "x": 1540,
        "y": 700,
        "wires": [
            [
                "f21c92be8b465004"
            ]
        ]
    },
    {
        "id": "0159c3a149221ae9",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "Menu",
        "group": "2f3d5f09892a6508",
        "order": 17,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "fa-bars",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1630,
        "y": 1360,
        "wires": [
            []
        ]
    },
    {
        "id": "31be8b2c438f2271",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "Charging",
        "group": "2f3d5f09892a6508",
        "order": 19,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "fa-plug",
        "payload": "-250",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "x": 1520,
        "y": 1020,
        "wires": [
            [
                "8666cd57ae0fccba"
            ]
        ]
    },
    {
        "id": "d32b018230f15ea8",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "top-parking",
        "group": "2f3d5f09892a6508",
        "order": 1,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "{{msg.colour}}",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "local_parking",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1650,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "3e5e9ab7e75d3cf9",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "top-engine-status",
        "group": "2f3d5f09892a6508",
        "order": 2,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "fa-cogs",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1670,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "a631848dd2af2654",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "top-motor-highlevel",
        "group": "2f3d5f09892a6508",
        "order": 3,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "autorenew",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1670,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "c25a45088e7fb776",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "top-batterry-low",
        "group": "2f3d5f09892a6508",
        "order": 4,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "battery_20",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1660,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a731a0aae205bb63",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "middle-gear-ratio",
        "group": "2f3d5f09892a6508",
        "order": 8,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "fa-cogs",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1670,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "ce7b5b83de0e5b53",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "middle-battery-remain",
        "group": "2f3d5f09892a6508",
        "order": 9,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "battery_50",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1680,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "31586d02ec31567a",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "middle-battery-temp",
        "group": "2f3d5f09892a6508",
        "order": 10,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "{{msg.background}}",
        "className": "",
        "icon": "fa-thermometer-full",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1680,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "38e4a639ea15b97d",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "middle-motor-rpm",
        "group": "2f3d5f09892a6508",
        "order": 11,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "{{msg.payload}}",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "autorenew",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1670,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "50f73028db85c21b",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "bottom-gear-ratio",
        "group": "2f3d5f09892a6508",
        "order": 13,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "fa-cogs",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1670,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "f4730e8a35f91098",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "bottom-motor-rpm",
        "group": "2f3d5f09892a6508",
        "order": 14,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "autorenew",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1670,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "2ed8e0dc67cd71d7",
        "type": "ui_button",
        "z": "d1e0eec527dd31ed",
        "name": "bottom-battery-temp",
        "group": "2f3d5f09892a6508",
        "order": 15,
        "width": 1,
        "height": 1,
        "passthru": false,
        "label": "",
        "tooltip": "",
        "color": "",
        "bgcolor": "gray",
        "className": "",
        "icon": "fa-thermometer-full",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 1680,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "588e6656ea729d64",
        "type": "mongodb in",
        "z": "d1e0eec527dd31ed",
        "mongodb": "623997ce03b885ee",
        "name": "MongoDB",
        "collection": "vehicle_data",
        "operation": "find",
        "x": 700,
        "y": 700,
        "wires": [
            [
                "944e4650111f4059",
                "38becc03227cd35a",
                "51a688477a7c43a2",
                "5afc2323c85f2288"
            ]
        ]
    },
    {
        "id": "053722a971e2a7b7",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract top parking indicator",
        "func": "msg.payload = msg.payload[0];\nif (msg.payload.top_indicator_parking_brake === \"red\")\n{\n    msg.background = \"red\";\n}\nelse\n{\n    msg.background = \"gray\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 140,
        "wires": [
            [
                "d15f7606954b1d98",
                "d32b018230f15ea8"
            ]
        ]
    },
    {
        "id": "d15f7606954b1d98",
        "type": "debug",
        "z": "d1e0eec527dd31ed",
        "name": "check history",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "background",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1650,
        "y": 100,
        "wires": []
    },
    {
        "id": "a5609b7b22a2379f",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract top engine status",
        "func": "msg.payload = msg.payload[0];\nif (msg.payload.top_indicator_check_engine === \"red\")\n{\n    msg.background = \"red\";\n}\nelse\n{\n    msg.background = \"gray\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 180,
        "wires": [
            [
                "3e5e9ab7e75d3cf9"
            ]
        ]
    },
    {
        "id": "38becc03227cd35a",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "detect change",
        "func": "// Retrieve the previous data from flow context (if it exists)\nvar previousData = flow.get('previousData') || {};  // Default to empty object if not found\n\n// Get the current data from the incoming message\nvar currentData = msg.payload;\n\n// Compare previous and current data\nif (JSON.stringify(previousData) !== JSON.stringify(currentData)) {\n    // If the data is different, store the new data in flow context\n    flow.set('previousData', currentData);\n    \n    // Pass the current data to the next node\n    msg.payload = currentData;\n    return msg;  // Forward the message with updated data\n} else {\n    // If the data has not changed, return null to stop further processing\n    return null;\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "// Code added here will be run once\n// whenever the node is started.\nreturn msg;",
        "libs": [],
        "x": 900,
        "y": 320,
        "wires": [
            [
                "a5609b7b22a2379f",
                "053722a971e2a7b7",
                "f81324baf36860cf",
                "ab5c276ff22ea2bb",
                "5df420a6c56a0a58",
                "c24d7fd08f879fa8",
                "bf9ceb4bcfd26d11",
                "6a34139eb1e44695",
                "ad2b86c7558a6bc3",
                "8baab17691c45e57",
                "02e91449eec7535d"
            ]
        ]
    },
    {
        "id": "bd8ca42d12298a9e",
        "type": "inject",
        "z": "d1e0eec527dd31ed",
        "name": "Interval",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "0.5",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "payload": "100",
        "payloadType": "str",
        "x": 540,
        "y": 700,
        "wires": [
            [
                "588e6656ea729d64"
            ]
        ]
    },
    {
        "id": "944e4650111f4059",
        "type": "debug",
        "z": "d1e0eec527dd31ed",
        "name": "mongo db payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 260,
        "wires": []
    },
    {
        "id": "02e91449eec7535d",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "low batterry",
        "func": "msg.payload = msg.payload[0];\nif (msg.payload.middle_battery_percentage <= 20) {\n    msg.background = \"red\";\n}\nelse {\n    msg.background = \"gray\";\n}\nmsg.payload = msg.payload.middle_battery_percentage;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 260,
        "wires": [
            [
                "c25a45088e7fb776"
            ]
        ]
    },
    {
        "id": "f81324baf36860cf",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract middle gear ratio",
        "func": "msg.payload = msg.payload[0].middle_gear_ratio;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1290,
        "y": 480,
        "wires": [
            [
                "a731a0aae205bb63"
            ]
        ]
    },
    {
        "id": "ab5c276ff22ea2bb",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract battery remain",
        "func": "msg.payload = msg.payload[0].middle_battery_percentage;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 520,
        "wires": [
            [
                "ce7b5b83de0e5b53"
            ]
        ]
    },
    {
        "id": "5df420a6c56a0a58",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract battery temp",
        "func": "msg.payload = msg.payload[0];\nif (msg.payload.middle_battery_temperature >= 85) {\n    msg.background = \"red\";\n}\nelse {\n    msg.background = \"gray\";\n}\nmsg.payload = msg.payload.middle_battery_temperature;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 560,
        "wires": [
            [
                "31586d02ec31567a"
            ]
        ]
    },
    {
        "id": "413509df113b2b20",
        "type": "mongodb out",
        "z": "d1e0eec527dd31ed",
        "mongodb": "623997ce03b885ee",
        "name": "update DB",
        "collection": "vehicle_data",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 2010,
        "y": 1020,
        "wires": []
    },
    {
        "id": "8666cd57ae0fccba",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "toggle charge status in DB",
        "func": "msg.query = { _id: \"vehicle_001\" };  // Specify the target document\n\n// Retrieve the current state from the global or flow context\nlet toggleState = flow.get(\"buttonToggleState\") || false;\n\n// Flip the toggle state\ntoggleState = !toggleState;\n\n// Save the new state back to the context\nflow.set(\"buttonToggleState\", toggleState);\n\nmsg.payload = {\n    $set: {\n        bottom_button_charging: toggleState ? true : false\n    }\n};\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1740,
        "y": 1020,
        "wires": [
            [
                "413509df113b2b20",
                "825c51a2a2ef97fc"
            ]
        ]
    },
    {
        "id": "c24d7fd08f879fa8",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract charging status",
        "func": "msg.payload = msg.payload[0];\nif (msg.payload.bottom_button_charging === true)\n{\n    msg.background = \"green\";\n}\nelse\n{\n    msg.background = \"gray\";\n}\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1020,
        "wires": [
            [
                "31be8b2c438f2271"
            ]
        ]
    },
    {
        "id": "825c51a2a2ef97fc",
        "type": "debug",
        "z": "d1e0eec527dd31ed",
        "name": "check history",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 960,
        "wires": []
    },
    {
        "id": "51a688477a7c43a2",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract charging status",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload[0]) {\n    msg.chargingStatus = msg.payload[0].bottom_button_charging;\n    msg.batteryPercentage = msg.payload[0].middle_battery_percentage;\n    msg.gear = msg.payload[0].middle_motor_speed_setting;\n    return msg;\n}\n\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 1060,
        "wires": [
            [
                "774e7d74b9f4a93f"
            ]
        ]
    },
    {
        "id": "e6e12a969263bd8d",
        "type": "mongodb out",
        "z": "d1e0eec527dd31ed",
        "mongodb": "623997ce03b885ee",
        "name": "update DB",
        "collection": "vehicle_data",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 1250,
        "y": 1140,
        "wires": []
    },
    {
        "id": "774e7d74b9f4a93f",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "update battery %",
        "func": "if (msg.chargingStatus === true && msg.batteryPercentage !== undefined) {\n    // Ensure batteryPercentage is a valid number, defaulting to 0 if null or invalid\n    let batteryPercentage = (typeof msg.batteryPercentage === 'number' && !isNaN(msg.batteryPercentage)) ? msg.batteryPercentage : 0;\n\n    // Increase the battery percentage by 0.1, but cap it at 100\n    batteryPercentage = batteryPercentage + 0.4;\n    batteryPercentage = batteryPercentage > 100 ? 100 : batteryPercentage;\n\n    // Round to 1 decimal place\n    batteryPercentage = parseFloat(batteryPercentage.toFixed(1));\n\n    msg.query = { _id: \"vehicle_001\" };\n    msg.payload = {\n        $set: {\n            gauge_power: batteryPercentage == 100? 0: -250,\n            middle_battery_percentage: batteryPercentage  // Ensure valid number is used\n        }\n    };\n    return msg;\n}\nelse if (msg.chargingStatus === false && msg.gear === 0) {\n     msg.query = { _id: \"vehicle_001\" };\n     msg.payload = {\n         $set: {\n             gauge_power: 0        \n         }\n     };\n\n     return msg;\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1100,
        "wires": [
            [
                "e6e12a969263bd8d"
            ]
        ]
    },
    {
        "id": "f21c92be8b465004",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract motor speed status",
        "func": "msg.motorSpeed = msg.payload;\nreturn msg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1780,
        "y": 700,
        "wires": [
            [
                "ffc41e7988fa8bbf"
            ]
        ]
    },
    {
        "id": "83a80c326d77e26d",
        "type": "mongodb out",
        "z": "d1e0eec527dd31ed",
        "mongodb": "623997ce03b885ee",
        "name": "update DB",
        "collection": "vehicle_data",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 1730,
        "y": 780,
        "wires": []
    },
    {
        "id": "ffc41e7988fa8bbf",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "update motor speed to db",
        "func": "if (msg.motorSpeed !== undefined) {\n    msg.query = { _id: \"vehicle_001\" };\n    msg.payload = {\n        $set: {\n            middle_motor_speed_setting: msg.motorSpeed,\n            gauge_power: msg.motorSpeed*250,\n            gauge_motor_rpm: msg.motorSpeed * 200\n        }\n    };\n\n    return msg;\n}\n\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1770,
        "y": 740,
        "wires": [
            [
                "83a80c326d77e26d"
            ]
        ]
    },
    {
        "id": "5afc2323c85f2288",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract motor speed status",
        "func": "if (msg.payload && Array.isArray(msg.payload) && msg.payload[0]) {\n    msg.motorStatus = msg.payload[0].middle_motor_speed_setting;\n    msg.batteryPercentage = msg.payload[0].middle_battery_percentage;\n    msg.batteryTemp = msg.payload[0].middle_battery_temperature;\n    return msg;\n}\n\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1300,
        "y": 1240,
        "wires": [
            [
                "382476e23f153908"
            ]
        ]
    },
    {
        "id": "f58059a20a507af3",
        "type": "mongodb out",
        "z": "d1e0eec527dd31ed",
        "mongodb": "623997ce03b885ee",
        "name": "update DB",
        "collection": "vehicle_data",
        "payonly": false,
        "upsert": false,
        "multi": false,
        "operation": "update",
        "x": 1250,
        "y": 1320,
        "wires": []
    },
    {
        "id": "382476e23f153908",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "update battery %",
        "func": "if (msg.motorStatus && msg.motorStatus > 0) {\n    // Ensure batteryPercentage is a valid number, defaulting to 0 if null or invalid\n    let batteryPercentage = (typeof msg.batteryPercentage === 'number' && !isNaN(msg.batteryPercentage)) ? msg.batteryPercentage : 0;\n\n    batteryPercentage = batteryPercentage - msg.motorStatus*0.1;\n    batteryPercentage = batteryPercentage < 0 ? 0 : batteryPercentage;\n    batteryPercentage = parseFloat(batteryPercentage.toFixed(1));\n \n\n    let batTemp = (typeof msg.batteryTemp === 'number' && !isNaN(msg.batteryTemp)) ? msg.batteryTemp : 0;\n    batTemp = batTemp + msg.motorStatus * 0.2;\n    batTemp = parseFloat(batTemp.toFixed(1));\n\n    msg.query = { _id: \"vehicle_001\" };\n    msg.payload = {\n        $set: {\n            middle_battery_percentage: batteryPercentage,\n            middle_battery_temperature: batTemp\n        }\n    };\n\n    return msg;\n}\nelse if (msg.batteryTemp > 25) {\n    let batTemp = (typeof msg.batteryTemp === 'number' && !isNaN(msg.batteryTemp)) ? msg.batteryTemp : 0;\n    batTemp = batTemp - 0.07;\n    batTemp = parseFloat(batTemp.toFixed(2));\n\n    msg.query = { _id: \"vehicle_001\" };\n    msg.payload = {\n        $set: {\n            middle_battery_temperature: batTemp < 25 ? 25 : batTemp\n        }\n    };\n\n    return msg;   \n}\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1270,
        "y": 1280,
        "wires": [
            [
                "f58059a20a507af3"
            ]
        ]
    },
    {
        "id": "bf9ceb4bcfd26d11",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract motor speed",
        "func": "\nif (msg.payload && Array.isArray(msg.payload) && msg.payload[0]) {\n    let isCharging = msg.payload[0].bottom_button_charging;\n    let batteryPercentage = msg.payload[0].middle_battery_percentage;\n    msg.payload = (batteryPercentage === 0 || isCharging === true) ? 0 : msg.payload[0].middle_motor_speed_setting;\n    return msg;\n}\n\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 700,
        "wires": [
            [
                "5877ab6dcdf4e788"
            ]
        ]
    },
    {
        "id": "6a34139eb1e44695",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract motor speed detect high speed",
        "func": "msg.payload = msg.payload[0];\nif (msg.payload.middle_motor_speed_setting >= 3) {\n    msg.background = \"red\";\n}\nelse {\n    msg.background = \"gray\";\n}\nmsg.payload = msg.payload.middle_motor_speed_setting;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1330,
        "y": 220,
        "wires": [
            [
                "a631848dd2af2654"
            ]
        ]
    },
    {
        "id": "ad2b86c7558a6bc3",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract power gauge",
        "func": "msg.payload = msg.payload[0].gauge_power;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1280,
        "y": 300,
        "wires": [
            [
                "d589306dca253788"
            ]
        ]
    },
    {
        "id": "8baab17691c45e57",
        "type": "function",
        "z": "d1e0eec527dd31ed",
        "name": "extract RPM",
        "func": "msg.payload = msg.payload[0].gauge_motor_rpm;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 340,
        "wires": [
            [
                "03139c1f642321af",
                "38e4a639ea15b97d"
            ]
        ]
    },
    {
        "id": "9a1b3e99f7d94fb2",
        "type": "ui_spacer",
        "z": "d1e0eec527dd31ed",
        "name": "spacer",
        "group": "2f3d5f09892a6508",
        "order": 5,
        "width": 10,
        "height": 1
    },
    {
        "id": "de280d18aec54954",
        "type": "ui_spacer",
        "z": "d1e0eec527dd31ed",
        "name": "spacer",
        "group": "2f3d5f09892a6508",
        "order": 16,
        "width": 3,
        "height": 1
    },
    {
        "id": "122605ba862ea524",
        "type": "ui_spacer",
        "z": "d1e0eec527dd31ed",
        "name": "spacer",
        "group": "2f3d5f09892a6508",
        "order": 18,
        "width": 6,
        "height": 1
    },
    {
        "id": "2f3d5f09892a6508",
        "type": "ui_group",
        "name": "All Rows",
        "tab": "34c19325f75e6b61",
        "order": 1,
        "disp": true,
        "width": 14,
        "collapse": false,
        "className": ""
    },
    {
        "id": "623997ce03b885ee",
        "type": "mongodb",
        "hostname": "127.0.0.1",
        "topology": "direct",
        "connectOptions": "",
        "port": 27017,
        "db": "vehicle_dashboard",
        "name": "MongoDB Fetch"
    },
    {
        "id": "34c19325f75e6b61",
        "type": "ui_tab",
        "name": "Vehicle Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
]
